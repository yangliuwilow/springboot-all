
server.port=8081
spring.application.name=sentine
# sentinel-dashboard-1.6.0 的访问路径 ，启动方式java -jar sentinel-dashboard-1.6.0.jar
spring.cloud.sentinel.transport.dashboard=localhost:8080
#取消Sentinel控制台懒加载
spring.cloud.sentinel.eager=true

#通过文件读取限流规则
#spring.cloud.sentinel.datasource.ds1.file.file=classpath:flowrule.json
#spring.cloud.sentinel.datasource.ds1.file.data-type=json
#spring.cloud.sentinel.datasource.ds1.file.rule-type=flow
#

#读取文件的实现限流规则
#wiki
#https://github.com/alibaba/Sentinel/tree/master/sentinel-dashboard
#https://github.com/spring-cloud-incubator/spring-cloud-alibaba/wiki/Sentinel
#https://blog.csdn.net/u010391342/article/details/86678637

#一条限流规则主要由下面几个因素组成：
#resource：资源名，即限流规则的作用对象
#count: 限流阈值
#grade: 限流阈值类型（QPS 或并发线程数）
#limitApp: 流控针对的调用来源，若为 default 则不区分调用来源
#strategy: 调用关系限流策略
#controlBehavior: 流量控制效果（直接拒绝、Warm Up、匀速排队）
#SpringCloud alibaba集成Sentinel后只需要在配置文件中进行相关配置，即可在 Spring 容器中自动注册 DataSource，这点很方便。配置文件添加如下配置
